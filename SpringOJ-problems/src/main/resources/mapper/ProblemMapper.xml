<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.david.mapper.ProblemMapper">

    <resultMap id="ProblemResultMap" type="com.david.problem.Problem" autoMapping="true">
        <id property="id" column="id"/>
        <result property="tags" column="tags" javaType="java.util.List"
                typeHandler="com.baomidou.mybatisplus.extension.handlers.JacksonTypeHandler"/>
    </resultMap>

    <select id="pageProblems" resultMap="ProblemResultMap">
        SELECT
        p.*
        FROM
        problems p
        <if test="sort != null and sort == 'recent_submit'">
            LEFT JOIN submissions s ON s.problem_id = p.id
        </if>
        <where>
            <if test="keyword != null and keyword != ''">
                AND p.title LIKE CONCAT('%', #{keyword}, '%')
            </if>
            <if test="difficulty != null">
                AND p.difficulty = #{difficulty}
            </if>
            <if test="category != null">
                AND p.category = #{category}
            </if>
            <if test="isVisible != null">
                AND p.is_visible = #{isVisible}
            </if>
        </where>
        <if test="sort != null and sort == 'recent_submit'">
            GROUP BY p.id
        </if>
        <choose>
            <when test="sort == 'id'">
                ORDER BY p.id DESC
            </when>
            <when test="sort == 'difficulty'">
                ORDER BY p.difficulty ASC
            </when>
            <when test="sort == 'acceptance'">
                ORDER BY (CASE WHEN p.submission_count = 0 THEN 0 ELSE p.solved_count / p.submission_count END) DESC
            </when>
            <when test="sort == 'number'">
                ORDER BY p.id ASC
            </when>
            <when test="sort == 'recent_submit'">
                ORDER BY MAX(s.created_at) DESC, p.id DESC
            </when>
            <otherwise>
                ORDER BY p.id ASC
            </otherwise>
        </choose>
    </select>
    <select id="selectSolutionFunctionName" resultType="String">
        select distinct solution_function_name
        from problems
                 left join test_cases_outputs on problems.id = test_cases_outputs.problem_id
        where problem_id = #{problemId}
    </select>
    <select id="selectCompareDescription" resultType="com.david.submission.dto.CompareDescription">
        select solution_function_name, difficulty
        from problems
        where id = #{problemId}
    </select>
</mapper>
