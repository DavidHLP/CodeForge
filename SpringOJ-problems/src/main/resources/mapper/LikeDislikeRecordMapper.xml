<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.david.mapper.LikeDislikeRecordMapper">

    <!-- 基础列 -->
    <sql id="Base_Column_List">
        id, user_id, target_type, target_id, action_type, created_at, updated_at
    </sql>

    <!-- 根据用户与目标获取一条记录 -->
    <select id="selectByUserAndTarget" resultType="com.david.calendar.LikeDislikeRecord">
        SELECT
        <include refid="Base_Column_List"/>
        FROM like_dislike_record
        WHERE user_id = #{userId}
        AND target_type = #{targetType}
        AND target_id = #{targetId}
        LIMIT 1
    </select>

    <!-- 根据用户与目标删除记录 -->
    <delete id="deleteByUserAndTarget">
        DELETE
        FROM like_dislike_record
        WHERE user_id = #{userId}
          AND target_type = #{targetType}
          AND target_id = #{targetId}
    </delete>

    <!-- 统计目标的某一动作数量 -->
    <select id="countByTargetAndAction" resultType="long">
        SELECT COUNT(1)
        FROM like_dislike_record
        WHERE target_type = #{targetType}
          AND target_id = #{targetId}
          AND action_type = #{actionType}
    </select>
    <select id="selectUpDownCountsByTargetTypeAndTargetIds" resultType="com.david.solution.UpDownCounts">
        SELECT
        target_id,
        SUM(IF(action_type = 'LIKE', 1, 0)) AS upvotes,
        SUM(IF(action_type = 'DISLIKE', 1, 0)) AS downvotes
        FROM
        like_dislike_record
        WHERE
        target_type = #{targetType} -- 目标类型（ 如 ARTICLE、COMMENT 等 ）
        AND target_id IN
        <foreach collection="targetIds" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        GROUP BY
        target_id
    </select>

    <!-- 插入一条记录（返回自增ID） -->
    <insert id="insertRecord" parameterType="com.david.calendar.LikeDislikeRecord" useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO like_dislike_record
            (user_id, target_type, target_id, action_type, created_at, updated_at)
        VALUES (#{userId}, #{targetType}, #{targetId}, #{actionType}, #{createdAt}, #{updatedAt})
    </insert>

    <!-- 根据ID更新action与更新时间 -->
    <update id="updateActionById">
        UPDATE like_dislike_record
        SET action_type = #{actionType},
            updated_at  = #{updatedAt}
        WHERE id = #{id}
    </update>

</mapper>
